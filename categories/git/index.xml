<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on VPhong Blog | A coding life</title><link>https://blog.vphong.com/categories/git/</link><description>Recent content in git on VPhong Blog | A coding life</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 26 Jan 2023 05:14:45 +0000</lastBuildDate><atom:link href="https://blog.vphong.com/categories/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Tips - Discard local changes | Git in-use</title><link>https://blog.vphong.com/series/git-in-use/2023-01-26-git-tips---discard-local-unstaged-changes--git-in-use/</link><pubDate>Thu, 26 Jan 2023 05:14:45 +0000</pubDate><guid>https://blog.vphong.com/series/git-in-use/2023-01-26-git-tips---discard-local-unstaged-changes--git-in-use/</guid><description>TL;DR: Reset to the last commit state. My favorite commands (just about it easy to type)
1git checkout . 2 3git reset --hard HEAD No rollback - Unstaged onlyERASE changes in current directory (including files and folders)
1# All files and sub-folders 2git checkout . 3 4# Specific file only 5git checkout -- &amp;lt;file_path&amp;gt; No branch specified, so current branch picked . indicates all path -- to indicated file path Or git restore from Git 2.</description></item></channel></rss>